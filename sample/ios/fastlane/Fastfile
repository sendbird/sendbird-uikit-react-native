PACKAGE_JSON=read_json(json_path: "#{Dir.pwd}/../../package.json")
VERSION=PACKAGE_JSON[:version]
DATE=Time.new.strftime("%Y.%m%d.%H%M")

before_all do |lane, options|
  if options[:version] && options[:version] != ""
    VERSION=options[:version]
  end
end

default_platform(:ios)
platform :ios do
  before_all do
    setup_ci if is_ci
  end

  desc "Deploy a new build to TestFlight"
  lane :deploy do
    # Use App Store Connect API key for authentication
    api_key_info = {
      key_id: ENV["APP_STORE_CONNECT_API_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_API_ISSUER_ID"],
      key: ENV["APP_STORE_CONNECT_API_KEY"]
    }

    # Check if all API key values are present
    if api_key_info[:key_id].nil? || api_key_info[:issuer_id].nil? || ENV["APP_STORE_CONNECT_API_KEY"].nil?
      UI.user_error!("Missing App Store Connect API key values. Please check your environment variables.")
    end

    ios_set_version(xcodeproj: "SendbirdUIKitSample.xcodeproj", version: VERSION)
    ios_set_build_number(xcodeproj: "SendbirdUIKitSample.xcodeproj", build_number: DATE)
    match(type: "appstore", readonly: true, app_identifier: ["com.sendbird.uikit.reactnative.sample", "com.sendbird.uikit.reactnative.sample.NotificationService"], api_key: api_key_info)
    build_app(workspace: "SendbirdUIKitSample.xcworkspace", scheme: "SendbirdUIKitSample")

    upload_to_testflight(
      api_key: api_key_info,
      skip_waiting_for_build_processing: true
    )
  end
end
