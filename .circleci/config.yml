### Aliases
aliases:
  - &restore_node_modules_base
    key: v{{ .Environment.CACHE_VERSION }}-yarn-base-{{ arch }}-{{ checksum "yarn.lock" }}
  - &restore_node_modules_packages
    key: v{{ .Environment.CACHE_VERSION }}-yarn-packages-{{ arch }}-{{ checksum "yarn.lock" }}
  - &install_node_modules
    name: Install node_modules
    command: yarn install --frozen-lockfile
  - &save_node_modules_base
    key: v{{ .Environment.CACHE_VERSION }}-yarn-base-{{ arch }}-{{ checksum "yarn.lock" }}
    paths:
      - ~/.cache/yarn
      - node_modules
  - &save_node_modules_packages
    key: v{{ .Environment.CACHE_VERSION }}-yarn-packages-{{ arch }}-{{ checksum "yarn.lock" }}
    paths:
      - sample/node_modules
      - packages/uikit-chat-hooks/node_modules
      - packages/uikit-react-native/node_modules
      - packages/uikit-react-native-foundation/node_modules
      - packages/uikit-utils/node_modules
  - &create_app_env
    name: Create env.ts
    command: echo "export const APP_ID = '${SENDBIRD_APP_ID}';" >> sample/src/env.ts

### Circle CI
# Built-in env vars - https://circleci.com/docs/2.0/env-vars/#built-in-environment-variables
# Xcode versions - https://circleci.com/docs/2.0/testing-ios/#supported-xcode-versions
# Cache key template - https://circleci.com/docs/caching/#using-keys-and-templates
version: 2.1
orbs:
  ruby: circleci/ruby@2.1.0
  macos: circleci/macos@2.4.0

parameters:
  platform:
    type: enum
    default: 'Noop'
    enum: ['All', 'iOS', 'Android', 'Noop']
  version:
    type: string
    default: ''

jobs:
  deploy-ios:
    macos:
      xcode: 15.3.0
    resource_class: macos.m1.medium.gen1
    environment:
      APP_VERSION: << pipeline.parameters.version >>
    steps:
      - checkout
      - macos/switch-ruby:
          version: '3.0.6'
      - ruby/install-deps:
          key: v{{ .Environment.CACHE_VERSION }}-gems-ios
          app-dir: ./sample/ios
      - restore_cache: *restore_node_modules_base
      - restore_cache: *restore_node_modules_packages
      - run: *install_node_modules
      - save_cache: *save_node_modules_base
      - save_cache: *save_node_modules_packages
      - restore_cache:
          key: v{{ .Environment.CACHE_VERSION }}-pods-{{ arch }}-{{ checksum "sample/ios/Podfile.lock" }}
      - run:
          name: Install pods
          working_directory: sample/ios
          command: bundle exec pod install
      - save_cache:
          key: v{{ .Environment.CACHE_VERSION }}-pods-{{ arch }}-{{ checksum "sample/ios/Podfile.lock" }}
          paths:
            - sample/ios/Pods
      - run: *create_app_env
      - run:
          name: Export environments
          command: |
            echo "export MATCH_PASSWORD=$FASTLANE_IOS_MATCH_PASSWORD" >> $BASH_ENV
            echo "export MATCH_GIT_URL=$FASTLANE_IOS_MATCH_GIT_URL" >> $BASH_ENV
            echo "export PILOT_USERNAME=$FASTLANE_IOS_APPLE_ID" >> $BASH_ENV
            echo "export PILOT_APPLE_ID=$FASTLANE_IOS_ITC_TEAM_ID" >> $BASH_ENV
            echo "export PILOT_DEV_PORTAL_TEAM_ID=$FASTLANE_IOS_TEAM_ID" >> $BASH_ENV
            echo "export PILOT_ITC_PROVIDER=$FASTLANE_IOS_TEAM_ID" >> $BASH_ENV 
            echo "export PILOT_SKIP_WAITING_FOR_BUILD_PROCESSING=true" >> $BASH_ENV
            echo "export FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD=$FASTLANE_IOS_APPLE_APPLICATION_SPECIFIC_PASSWORD" >> $BASH_ENV
      - run:
          name: Run fastlane
          command: yarn deploy:ios version:$APP_VERSION

  deploy-android:
    docker:
      - image: cimg/android:2023.10-node
    resource_class: xlarge
    environment:
      APP_VERSION: << pipeline.parameters.version >>
    steps:
      - checkout
      - run:
          name: Install Ninja
          command: sudo apt-get update && sudo apt-get install -y ninja-build
      - ruby/install:
          version: '2.7.6'
      - ruby/install-deps:
          key: v{{ .Environment.CACHE_VERSION }}-gems-android
          app-dir: ./sample/android
      - restore_cache: *restore_node_modules_base
      - restore_cache: *restore_node_modules_packages
      - run: *install_node_modules
      - save_cache: *save_node_modules_base
      - save_cache: *save_node_modules_packages
      - run: *create_app_env
      - run:
          name: Create service-account.json
          environment:
            - FILE_PATH: sample/android/fastlane/service-account.json
          command: |
            echo "$FASTLANE_ANDROID_SERVICE_ACCOUNT" | base64 --decode >> $FILE_PATH
            echo "export GOOGLE_APPLICATION_CREDENTIALS=$CIRCLE_WORKING_DIRECTORY/$FILE_PATH" >> $BASH_ENV
            echo "export FIREBASEAPPDISTRO_APP=$FASTLANE_ANDROID_APP_ID" >> $BASH_ENV
      - run:
          name: Run fastlane
          command: yarn deploy:android version:$APP_VERSION

workflows:
  run-ios:
    when:
      or:
        - equal: [<< pipeline.parameters.platform >>, 'All']
        - equal: [<< pipeline.parameters.platform >>, 'iOS']
    jobs:
      - deploy-ios
  run-android:
    when:
      or:
        - equal: [<< pipeline.parameters.platform >>, 'All']
        - equal: [<< pipeline.parameters.platform >>, 'Android']
    jobs:
      - deploy-android
