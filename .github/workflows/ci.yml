name: ci
on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - main
env:
  CACHE_NODE_MODULES_PATH: |
    node_modules
    */node_modules
    */*/node_modules

jobs:
  prepare:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get lockfile hash
        id: lockfile_hash
        run: echo "hash=${{ hashFiles('**/yarn.lock') }}" >> $GITHUB_OUTPUT

      - name: Check cached node_modules
        id: check_cache
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_NODE_MODULES_PATH }}
          key: ${{ steps.lockfile_hash.outputs.hash }}

      - name: Install dependencies
        if: steps.check_cache.outputs.cache-hit == ''
        run: yarn install --frozen-lockfile
    outputs:
      cache_node_modules_key: ${{ steps.lockfile_hash.outputs.hash }}

  run-lint:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Check cached node_modules
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_NODE_MODULES_PATH }}
          key: ${{ needs.prepare.outputs.cache_node_modules_key }}

      - name: Run lint
        run: yarn lint

  run-build:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Check cached node_modules
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_NODE_MODULES_PATH }}
          key: ${{ needs.prepare.outputs.cache_node_modules_key }}

      - name: Run build
        run: yarn test:build

  run-test:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Check cached node_modules
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_NODE_MODULES_PATH }}
          key: ${{ needs.prepare.outputs.cache_node_modules_key }}

      - name: Run test
        run: yarn test --collect-coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  run-docs-validation:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Check cached node_modules
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_NODE_MODULES_PATH }}
          key: ${{ needs.prepare.outputs.cache_node_modules_key }}

      - name: Run docs validation
        run: yarn test:docs-validation
